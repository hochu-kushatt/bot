import telebot
from telebot import types
import json
from pycbrf.toolbox import ExchangeRates # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É


bot = telebot.TeleBot('token');

list_of_users = {}
my_chats = [1022066349]
kurs_trig = 0

# list_of_aktiviti = []
# list_of_titles = []

def reading_my_chats():
    with open('chats.txt', 'r') as filehandle:
        places = [int(current_place.rstrip()) for current_place in filehandle.readlines()]
    return places

def write_my_chats():
    with open('chats.txt', 'w') as filehandle:
        filehandle.writelines("%s\n" % place for place in my_chats)
    return print('list saved')
        
def parse_keys_to_int(initial_value):# —Å—á–∏—Ç–∞—Ç—å –∫–ª—é—á–∏
    if isinstance(initial_value, dict):
        return {int(key):value for key,value in initial_value.items()}
    return initial_value

my_chats = reading_my_chats()

try:
    with open('data.json', 'r') as f:
        print('new file')
        list_of_users = json.load(f, object_hook=parse_keys_to_int)
        bot.send_message(1022066349, "–±–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω")
        bot.send_message(1022066349, "—Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø–æ–¥–≥—Ä—É–∂–µ–Ω–∞")
        # list_of_users = list_of_users.items()
        
except Exception:
    pass

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("‚ùì –ü–æ–º–æ—â—å")
    btn2 = types.KeyboardButton("üëã –ú–æ–π —É—Ä–æ–≤–µ–Ω—å")
    btn3 = types.KeyboardButton("üí™ –¢–æ–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
    btn4 = types.KeyboardButton("üìà –ß—Ç–æ –ø–æ —Ä—É–±–ª—é?")
    markup.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç)", reply_markup=markup)
        
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global kurs_trig
    if message.from_user.id == 1022066349:
        if message.text[0 : 4] == '/add':
            my_chats.append(int(message.text[5:]))
            bot.send_message(1022066349, "added!")
            # write_my_chats()
    if (message.chat.id in my_chats):
        global list_of_users
        global start
        
        def sorted_tuple(): # —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —á–µ–ª–∏–∫–æ–≤ –ø–æ –∫–æ–ª–≤—É —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –ª—è–º–±–¥–∞—Ñ—É–Ω–∫—Ü–∏–∏
            sort_tuple = sorted(list_of_users.items(), key=lambda x: x[1], reverse=True)
            sort_tuple = list(map(list, sort_tuple))
            return sort_tuple
        
        # bot.send_message(message.chat.id, message.chat.id)
        list_of_users[message.from_user.id] = list_of_users.get(message.from_user.id, 0) + 1
        if message.text == "‚ùì –ü–æ–º–æ—â—å":
            bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –≤–æ—Ç, —á—Ç–æ —è –º–æ–≥—É:")
            bot.send_message(message.chat.id, "==> –ü–æ–∫–∞–∂—É —Ä–µ–π—Ç–∏–Ω–≥ —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞")
            bot.send_message(message.chat.id, "==> –ü–æ–∫–∞–∂—É —Ä–µ–π—Ç–∏–Ω–≥ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            bot.send_message(message.chat.id, "==> –ü–æ–∫–∞–∂—É –∫—É—Ä—Å —Ä—É–±–ª—è –∫ –¥–æ–ª–ª–∞—Ä—É –∏ –µ–≤—Ä–æ \n–ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –Ω–∞ –ª—é–±–æ–π –¥–µ–Ω—å ")
            sticker = open('sticker.webp', 'rb')
            bot.send_photo(message.chat.id, sticker)
        if message.text == "üëã –ú–æ–π —É—Ä–æ–≤–µ–Ω—å":
            try:
                sort_list = sorted_tuple()
                place_in_slist = 1 + sort_list.index([message.from_user.id, list_of_users[message.from_user.id]])
                bot.send_message(message.chat.id, f"–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ {list_of_users[message.from_user.id]} —Å–æ–æ–±—â–µ–Ω–∏–π")
                bot.send_message(message.chat.id, f"–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ - {place_in_slist}")

            except Exception as ex:
                bot.send_message(message.chat.id, ex)
                #bot.send_message(message.chat.id, ex)
        if message.text == "üí™ –¢–æ–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏":
            trig = 1
            sorted_list = sorted_tuple()
            for i in range(len(sorted_list)):# –ø–µ—Ä–µ—é–æ—Ä —á–µ–ª–∏–∫–æ–≤ –¥–ª—è –ø—Ä–æ—Å–≤–æ–µ–Ω–∏—è —é–∑–µ—Ä–Ω–µ–π–º–æ–º
                user_id = sorted_list[i][0]
                sorted_list[i][0] = bot.get_chat_member(user_id, user_id).user.username
            for line in sorted_list:
                if trig <= 10:
                    string = f"@{line[0]} –ø–æ—Å–ª–∞–ª {str(line[1])} —Å–æ–æ–±—â–µ–Ω–∏–π"
                    bot.send_message(message.chat.id, f"{trig}-–µ –º–µ—Å—Ç–æ ==> {string}")
                else:
                    break
                trig += 1
            bot.send_message(message.chat.id, "–ü–µ—Ä–≤—ã–µ –¥–µ—Å—è—Ç—å –º–µ—Å—Ç –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        if message.text == "üìà –ß—Ç–æ –ø–æ —Ä—É–±–ª—é?":
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ \n–≥–≥–≥–≥-–º–º-–¥–¥")
           
            kurs_trig = 1
        
        if  (len(message.text) == 10) and (kurs_trig == 1):
            try:
                data = message.text
                rates = ExchangeRates(data) # –∑–∞–¥–∞–µ–º –¥–∞—Ç—É, –∑–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
                result = [rates['USD'].value, rates['EUR'].value]
                bot.send_message(message.chat.id, f"{data}")
                bot.send_message(message.chat.id, f"RU-USD: {result[0]}")
                bot.send_message(message.chat.id, f"RU-EUR: {result[1]}")
                img = open('rubl.jpg', 'rb')
                bot.send_photo(message.chat.id, img)
            except Exception as ex:
                bot.send_message(message.chat.id, "–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –Ω–µ–≤–µ—Ä–µ–Ω(((")
                data = None
                rates = ExchangeRates(data)
                result = [rates['USD'].value, rates['EUR'].value]
                if data == None:
                    data = '—Å–µ–≥–æ–¥–Ω—è'
                bot.send_message(message.chat.id, f"{data}")
                bot.send_message(message.chat.id, f"RU-USD: {result[0]}")
                bot.send_message(message.chat.id, f"RU-EUR: {result[1]}")
                img = open('rubl.jpg', 'rb')
                bot.send_photo(message.chat.id, img)
            kurs_trig = 0
                
        
        with open('data.json', 'w') as f:
            json.dump(list_of_users, f)
    else:
        bot.send_message(1022066349, "–ù–°–î –∫ –±–æ—Ç—É")
        user_id = message.from_user.id
        bot.send_message(1022066349, f"{message.chat.id}, @{bot.get_chat_member(user_id, user_id).user.username}")
        
bot.polling(non_stop=True, interval=0)